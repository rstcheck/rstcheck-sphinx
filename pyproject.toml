[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rstcheck-sphinx"
version = "1.0.1"
description = "Builder for the sphinx documentation generator to check the source with rstcheck."
authors = ["Christian Riedel <cielquan@protonmail.com>"]
maintainers = ["Christian Riedel <cielquan@protonmail.com>"]
license = "MIT"
repository = "https://github.com/rstcheck/rstcheck-sphinx"
readme = "README.rst"
classifiers = ["Topic :: Software Development :: Quality Assurance"]
keywords = ["restructuredtext", "rst", "linter", "static-analysis"]
packages = [
  { include = "rstcheck_sphinx", from = "src" },
  { include = "tests", format = "sdist" },
  { include = "AUTHORS.rst", format = "sdist" },
]
include = ["testing"]

[tool.poetry.dependencies]
python = "^3.7"
# EXTRA testing
pytest = { version = ">=6.0", optional = true }
pytest-cov = {version = ">=3.0", optional = true}
coverage = {extras = ["toml"], version = ">=6.0", optional = true}
coverage-conditional-plugin = { version = ">=0.5", optional = true }
pytest-sugar = { version = ">=0.9.5", optional = true }
pytest-randomly = { version = ">=3.0", optional = true }
pytest-mock = {version = ">=3.7", optional = true}
# EXTRA docs
sphinx-autobuild = { version = "2021.3.14", optional = true }
m2r2 = { version = ">=0.3.2", optional = true }
# TODO:#i# wait for fix: https://github.com/MrDogeBro/sphinx_rtd_dark_mode/issues/28
sphinx-rtd-theme = { version = "<1", optional = true }
sphinx-rtd-dark-mode = {version = "^1.2.4", optional = true}
sphinxcontrib-spelling = { version = ">=7.3", optional = true }
# MAIN DEPENDENCIES
importlib-metadata = {version = ">=1.6, <5.0", python = "<3.8"}
sphinx = ">=4.0, <6.0"

[tool.poetry.dev-dependencies]
pre-commit = ">=2.17"
tox = ">=3.15"
my-flake8-plugins = { git = "https://github.com/cielquan/my-flake8-plugins.git", rev = "v1.5.0", extras= ["flakeheaven"]}
pylint = ">=2.12"
mypy = ">=0.931"
pytest = ">=6.0"
sphinx = ">=4.0"
sphinx-rtd-theme = "*"

[tool.poetry.extras]
sphinx = ["sphinx"]
toml = ["tomli"]
testing = [
  "pytest",
  "pytest-cov",
  "coverage",
  "coverage-conditional-plugin",
  "pytest-sugar",
  "pytest-randomly",
  "pytest-mock",
]
docs = [
  "sphinx",
  "sphinx-autobuild",
  "m2r2",
  "sphinx-rtd-theme",
  "sphinx-rtd-dark-mode",
  "sphinx-autodoc-typehints",
  "sphinxcontrib-apidoc",
  "sphinxcontrib-spelling",
]


# -- BLACK CONFIG ---------------------------------------------------------------------
[tool.black]
line-length = 100
exclude = "venv/"
include = '\.pyi?$'  # single quotes needed


# -- ISORT CONFIG ---------------------------------------------------------------------
[tool.isort]
profile = "black"
lines_after_imports = 2
combine_as_imports = true
skip_gitignore = true


# -- MYPY CONFIG ----------------------------------------------------------------------
[tool.mypy]
show_error_codes = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
disallow_any_generics = true
check_untyped_defs = true
implicit_reexport = false
python_version = "3.10"  # CHANGE ME


# -- FLAKEHEAVEN CONFIG ----------------------------------------------------------------
[tool.flakeheaven]
base = ["https://raw.githubusercontent.com/Cielquan/my-flake8-plugins/v1.5.0/flakeheaven-base.toml"]
min_python_version = "3.7"  # CHANGE ME

[tool.flakeheaven.exceptions."examples"]
flake8-eradicate = ["-E800"]


# -- PYLINT CONFIG --------------------------------------------------------------------
[tool.pylint]

[tool.pylint.messages_control]
disable = [
  # deactivate because double check
  # https://github.com/PyCQA/pylint/issues/3512
  "C0103",  # invalid-name - [pep8-naming]
  "C0113",  # unneeded-not - F713[flake8]
  "C0114",  # missing-module-docstring - D100,D104[flake8]
  "C0115",  # missing-class-docstring - D101,D106[flake8]
  "C0116",  # missing-function-docstring - D102,D103,D105[flake8]
  "C0301",  # line-too-long - E501[pycodestyle]
  "C0303",  # trailing-whitespace - W291,W293[falke8]
  "C0304",  # missing-final-newline - W292[falke8]
  "C0305",  # trailing-newlines - W291[falke8]
  "C0321",  # multiple-statements - E701[falke8]
  "C0411",  # wrong-import-order - I202[flake8]
  "C0413",  # wrong-import-position - E402[flake8]
  "E0602",  # undefined-variable - F821[flake8]
  "R0912",  # too-many-branches - C901[flake8]
  "W0301",  # unnecessary-semicolon - E703[flake8]
  "W0311",  # bad-indentation - E111[flake8]
  "W0611",  # unused-import - F401[flake8]
  "W0612",  # unused-variable - F841[flake8]
  "W0702",  # bare-except - E722[pycodestyle]
  # deactivate because unwanted
  "W0511",  # fixme
  "R0903",  # too-few-public-methods
  # deactivate because of bugs
  "W1203",  # Use % format in logger funcs | https://github.com/PyCQA/pylint/issues/2354
]


# -- PYTEST CONFIG --------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = "-ra --showlocals"


# -- COVERAGE CONFIG ------------------------------------------------------------------
[tool.coverage]
[tool.coverage.run]
plugins = ["coverage_conditional_plugin"]
branch = true
parallel = true
context = "static-context"
omit = [
  "tests/*",
]

[tool.coverage.paths]
tox_combine = [
  "src/rstcheck_sphinx",
  "*/.tox/*/lib/python*/site-packages/rstcheck_sphinx",
  "*/.tox/pypy*/site-packages/rstcheck_sphinx",
  "*/.tox\\*\\Lib\\site-packages\\rstcheck_sphinx",
]
local_combine = [
  "src/rstcheck_sphinx",
  "*/.venv/lib/python*/site-packages/rstcheck_sphinx",
  "*/.venv\\*\\Lib\\site-packages\\rstcheck_sphinx",
  "*/src/rstcheck_sphinx",
  "*\\src\\rstcheck_sphinx",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "# pragma: no cover",
  "if __name__ == ['\"]__main__['\"]:",
  "def __str__",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "if 0:",
  "if False:",
  "if TYPE_CHECKING:",
  "if MYPY:",
]

[tool.coverage.html]
show_contexts = true

[tool.coverage.coverage_conditional_plugin.rules]
# use with: # pragma: <KEY>
py-gte-38 = "sys_version_info >= (3, 8)"
py-gte-310 = "sys_version_info >= (3, 10)"
